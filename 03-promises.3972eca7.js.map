{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,SAAUC,SAASC,cAAc,mBACjCC,OAAQF,SAASC,cAAc,SAC/BE,QAASH,SAASC,cAAc,kBAChCG,OAAQJ,SAASC,cAAc,iBAC/BI,SAAUL,SAASC,cAAc,oBAGnC,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAyBbV,EAAKC,SAASiB,iBAAiB,SArB/B,SAAuBC,GACrBA,EAAMC,iBACN,MAAMC,EAAaC,OAAOtB,EAAKK,QAAQkB,OACjCC,EAAOF,OAAOtB,EAAKM,OAAOiB,OAC1BE,EAASH,OAAOtB,EAAKO,SAASgB,OAEpC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,IAAK,CAEhClB,EAAckB,EADAL,EAAaG,GAAQE,EAAI,IAEpCC,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBkB,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAqBJ,QAAUhB,MAAU,IAElEqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBkB,EAAA9B,GAAS+B,OAAOG,QAAQ,sBAAoBN,QAAQhB,MAAU,G,CAGpEO,YAAW,KACTjB,EAAKI,OAAO6B,OAAO,GAClBZ,EAAaG,EAAOC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  buttonEl: document.querySelector('[type=\"submit\"]'),\n  formEl: document.querySelector('.form'),\n  delayEl: document.querySelector('[name=\"delay\"]'),\n  stepEl: document.querySelector('[name=\"step\"]'),\n  amountEl: document.querySelector('[name=\"amount\"]'),\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction promiseHandle(event) {\n  event.preventDefault();\n  const firstDelay = Number(refs.delayEl.value);\n  const step = Number(refs.stepEl.value);\n  const amount = Number(refs.amountEl.value);\n\n  for (let i = 1; i <= amount; i++) {\n    const delay = firstDelay + step * (i - 1);\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${i} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${i} in ${delay}ms`);\n      });\n  }\n  setTimeout(() => {\n    refs.formEl.reset();\n  }, firstDelay + step * amount);\n}\n\nrefs.buttonEl.addEventListener('click', promiseHandle);\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","buttonEl","document","querySelector","formEl","delayEl","stepEl","amountEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","firstDelay","Number","value","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.3972eca7.js.map"}